{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@webhandle/backbone-view/webpack/bootstrap","webpack://@webhandle/backbone-view/webpack/runtime/define property getters","webpack://@webhandle/backbone-view/webpack/runtime/hasOwnProperty shorthand","webpack://@webhandle/backbone-view/./client-js/event-entry-mapper.js","webpack://@webhandle/backbone-view/./client-js/view.js","webpack://@webhandle/backbone-view/./client-js/generate-id.js","webpack://@webhandle/backbone-view/./client-js/extract-event-names.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export default function eventEntryMapper([key, value]) {\n\tkey = key.trim()\n\tlet parts = key.split(' ')\n\tlet event = parts.shift().trim()\n\tlet selector = parts.join(' ').trim()\n\t\n\tif(typeof value === 'string') {\n\t\tvalue = value.trim()\n\t}\t\n\t\n\treturn {\n\t\tevent: event,\n\t\tselector: selector,\n\t\thandler: value\n\t}\n}","import generateId from \"./generate-id.js\"\n// import pick from \"./pick.js\"\nimport eventEntryMapper from \"./event-entry-mapper.js\"\nimport extractEventNames from \"./extract-event-names.js\"\n\nlet defaultOptions = {\n\t// The default `tagName` of a View's element is `\"div\"`.\n\ttagName: 'div'\n\t\n\t, events: {}\n\n}\nlet viewOptions = ['model', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n/**\n * A way to connect data to be displayed, a way to display it, and an organization\n * of functions to handle events.\n */\nexport class View {\n\tconstructor(options) {\n\t\tthis.id = generateId()\n\t\tObject.assign(this, defaultOptions)\n\t\tthis.preinitialize.apply(this, arguments);\n\t\tObject.assign(this, options)\n\t\tthis._ensureElement()\n\t\tthis.initialize.apply(this, arguments);\n\t}\n\n\n\t/**\n\t * preinitialize is an empty function by default. You can override it with a function\n\t * or object.  preinitialize will run before any instantiation logic is run in the View\n\t */\n\tpreinitialize() { }\n\n\t/**\n\t * Initialize is an empty function by default. Override it with your own\n\t * initialization logic.\n\t */\n\tinitialize() { }\n\n\t/**\n\t * **render** is the core function that your view should override, in order\n\t * to populate its element (`this.el`), with the appropriate HTML. The\n\t * convention is for **render** to always return `this`.\n\t * @returns this\n\t */\n\trender() {\n\t\treturn this\n\t}\n\t\n\t/**\n\t * Removes the element from the dom. Does not disable event listeners\n\t */\n\tremove() {\n\t\tthis.el.parentElement.removeChild(this.el)\n\t}\n\t\n\t/**\n\t * Adds this view as a child to a containing element. Nothing special is going on here.\n\t * This is just a shortcut for container.appendChild\n\t * @param {Element} container \n\t */\n\tappendTo(container) {\n\t\tcontainer.appendChild(this.el)\n\t}\n\n\t/**\n\t * Clears the contents of the container and adds this view.\n\t * @param {Element} container \n\t */\n\treplaceContentsOf(container) {\n\t\tcontainer.innerHTML = ''\n\t\tthis.appendTo(container)\n\t}\n\n\t/**\n\t * Set the element for this view, and if new, adds listeners to it in accordance\n\t * with the \"events\" member.\n\t * @param {Element} el The dom element which will be the root of this view\n\t * @returns this\n\t */\n\tsetElement(el) {\n\t\tif (this.el !== el) {\n\t\t\tthis.el = el\n\t\t\tthis._addListeners()\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Produces a DOM element to be assigned to your view. Exposed for\n\t * subclasses using an alternative DOM manipulation API.\n\t * @param {string} name The element tag name\n\t * @returns The dom element\n\t */\n\t_createElement(name) {\n\t\tlet el = document.createElement(name)\n\t\tel.view = this\n\t\treturn el\n\t}\n\n\t/**\n\t * Ensures that the element exists. Applies attributes and className\n\t * to it regardless\n\t */\n\t_ensureElement() {\n\t\tif (!this.el) {\n\t\t\tthis.setElement(this._createElement(this.tagName))\n\t\t}\n\t\tthis._setAttributes()\n\t\tif (this.className) {\n\t\t\tthis.el.classList.add(this.className)\n\t\t}\n\t}\n\n\t/**\n\t * Set attributes from a hash on this view's element.  Exposed for\n\t * subclasses using an alternative DOM manipulation API.\n\t * @param {object} attributes \n\t */\n\t_setAttributes(attributes) {\n\t\tif (this.attributes) {\n\t\t\tfor (let [key, value] of Object.entries(this.attributes)) {\n\t\t\t\tthis.el.setAttribute(key, value)\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * \n\t * Set callbacks, where `this.events` is a hash of\n\t * *{\"event selector\": \"callback\"}*\n\t *\n\t *    {\n\t *       'mousedown .title':  'edit',\n\t *       'click .button':     'save',\n\t *       'click .open':       function(e) { ... },\n\t *       'keydown .':     \t  'handleKey'\n\t *    }\n\t * pairs. Callbacks will be bound to the view, with `this` set properly.\n\t * \n\t * \n\t * Note that the selector `.` will match the root element and can be used\n\t * as a final chance to handle events or for events like an escape key\n\t * which are essentially global to the widget.\n\t * \n\t */\n\t_addListeners() {\n\t\tthis.eventTriggers = Object.entries(this.events).map(eventEntryMapper)\n\t\tlet eventNames = extractEventNames(this.eventTriggers)\t\t\n\n\t\tfor(let eventName of eventNames) {\n\t\t\tthis.el.addEventListener(eventName, this._eventHandler.bind(this))\n\t\t}\n\t}\n\t\n\t/**\n\t * Get the elements from the view which match the selector\n\t * @param {string} selector A css selector. `.` will select the root element\n\t * @returns An array of elements\n\t */\n\t_getCandidates(selector) {\n\t\tif(selector === '.') {\n\t\t\treturn [this.el]\n\t\t}\n\t\treturn Array.from(this.el.querySelectorAll(selector))\n\t}\n\t\n\t/**\n\t * Handles all events for all elements within the view. It attempts to find a\n\t * trigger matching the event and then process it. It will match and invoke\n\t * only one trigger.\n\t * @param {Event} evt \n\t */\n\t_eventHandler(evt) {\n\t\tfor(let trigger of this.eventTriggers) {\n\t\t\tif(evt.type == trigger.event) {\n\t\t\t\tlet candidates = this._getCandidates(trigger.selector)\n\t\t\t\tlet found = null\n\t\t\t\tfor(let candidate of candidates) {\n\t\t\t\t\tif(candidate === evt.target || candidate.contains(evt.target)) {\n\t\t\t\t\t\tfound = candidate\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(found) {\n\t\t\t\t\tif(typeof trigger.handler === 'string') {\n\t\t\t\t\t\tthis[trigger.handler].call(this, evt, found)\n\t\t\t\t\t}\t\n\t\t\t\t\telse if(typeof trigger.handler === 'function') {\n\t\t\t\t\t\ttrigger.handler.call(this, evt, found)\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * Generates a random string id in the browser. Will probably not work\n * on the server.\n * @returns A base64 web url safe string\n */\nexport default function generateId() {\n\tlet array = new Uint8Array(32)\n\twindow.crypto.getRandomValues(array)\n\tlet value = btoa(array)\n\tvalue = value.replace(/\\//g, \"_\").replace(/\\+/g, \"-\").replace(/=+$/, \"\")\n\treturn value\n}","export default function extractEventNames(eventTriggers) {\n\tlet eventNames = Array.from(eventTriggers.reduce((acc, trigger) => {\n\t\tacc.add(trigger.event)\n\t\treturn acc\n\t}, new Set()))\n\treturn eventNames\n}"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","eventEntryMapper","value","parts","trim","split","event","shift","selector","join","handler","defaultOptions","tagName","events","View","constructor","options","this","id","array","Uint8Array","window","crypto","getRandomValues","btoa","replace","generateId","assign","preinitialize","apply","arguments","_ensureElement","initialize","render","remove","el","parentElement","removeChild","appendTo","container","appendChild","replaceContentsOf","innerHTML","setElement","_addListeners","_createElement","name","document","createElement","view","_setAttributes","className","classList","add","attributes","entries","setAttribute","eventTriggers","map","eventNames","Array","from","reduce","acc","trigger","Set","eventName","addEventListener","_eventHandler","bind","_getCandidates","querySelectorAll","evt","type","candidates","found","candidate","target","contains"],"sourceRoot":""}